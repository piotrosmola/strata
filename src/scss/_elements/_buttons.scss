/* Buttons
----------------------------------------------------------*/

.btn {
  $b: &;
  @include reset('button');
  position: relative;
  @include text-uppercase;
  border-radius: 3rem;
  height: 2.8rem;
  font-size: 0.55rem;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0 2rem 0.1rem;
  color: inherit;
  user-select: none;

  &-bg {
    @include cover(-8px);
    background-color: rgba(white, 0.02);
    backdrop-filter: blur(40px);
  }

  &-outline {
    @include cover;
    border: 1px solid currentColor;
    border-radius: 3rem;
  }

  &-label {
    position: relative;
    text-align: center;
  }

  &-icon {
    position: relative;

    &.i-arrow-top-right,
    &.i-arrow-top-right-fat {
      margin-right: -0.3em;
      @include transition-primary('transform, opacity');

      &::before,
      &::after {
        @include transition-primary('transform, opacity');
        display: block;
      }

      &::after {
        position: absolute;
        right: 100%;
        top: 100%;
        @include icon('arrow-top-right');
        opacity: 0;
        transform: scale(0.3);
      }
    }

    &.i-arrow-top-right-fat::after {
      @include icon('arrow-top-right-fat');
    }

    &.i-play {
      @include transition-primary('transform, opacity');

      &::before,
      &::after {
        @include transition-primary('transform, opacity');
        display: block;
      }

      &::after {
        position: absolute;
        right: 100%;
        top: 0;
        @include icon('play');
        opacity: 0;
        transform: scale(0.3);
      }
    }

    &.i-arrow-down {
      @include transition-primary('transform, opacity');

      &::before,
      &::after {
        @include transition-primary('transform, opacity');
        display: block;
      }

      &::after {
        position: absolute;
        bottom: 100%;
        left: 0;
        @include icon('arrow-down');
        opacity: 0;
        transform: scale(0.3);
      }
    }
  }

  &:hover,
  &:focus,
  &:active,
  &:focus:active,
  a:hover & {
    box-shadow: none;
    outline: none;
    color: inherit;

    #{$b}-emot {
      animation: wave infinite 0.8s linear;
      transform-origin: 80% 100%;
    }

    #{$b}-icon {
      &.i-arrow-top-right,
      &.i-arrow-top-right-fat {
        transform: translate3d(100%, -100%, 0);

        &::after {
          opacity: 1;
          transform: scale(1);
        }

        &::before {
          opacity: 0;
          transform: scale(0.3);
        }
      }

      &.i-play {
        transform: translate3d(100%, 0, 0);

        &::after {
          opacity: 1;
          transform: scale(1);
        }

        &::before {
          opacity: 0;
          transform: scale(0.3);
        }
      }

      &.i-arrow-down {
        transform: translate3d(0, 100%, 0);

        &::after {
          opacity: 1;
          transform: scale(1);
        }

        &::before {
          opacity: 0;
          transform: scale(0.3);
        }
      }
    }
  }
}

/* Sizes */

.btn-lg {
}

.btn-sm {
  height: 2rem;
  font-size: 0.55rem;
  padding: 0 1.25rem 0.1rem;
}

/* Types */

.btn-primary {
  .btn-icon {
    &:last-child {
      margin-left: 0.5rem;
    }
  }
}

.btn-oval {
  height: 11rem;
  width: 11rem;
  flex-direction: column;
  padding: 0.5rem;

  @include media('>xxl') {
    height: 13rem;
    width: 13rem;
  }

  @include media('<=lg') {
    height: 8rem;
    width: 8rem;
  }
  @include media('<=sm') {
    height: 7rem;
    width: 7rem;
    font-size: 0.45rem;
  }

  .btn-bg,
  .btn-outline {
    border-radius: 50%;
  }

  .btn-label {
    max-width: 6rem;
  }

  .btn-icon {
    margin-bottom: 1rem;
    font-size: 1rem;

    &:last-child {
      margin-top: 1rem;
      margin-bottom: 0;
    }
  }

  .btn-bg {
    @include cover(-10px);

    @include media('<=sm') {
      @include cover(-5px);
    }
  }

  &:hover,
  &:focus,
  &:active,
  &:focus:active {
    &:not(:disabled),
    &:not(.disabled) {
    }
  }
}

.btn-arrow {
  height: 3rem;
  width: 3rem;
  cursor: pointer;
  border-radius: 50%;
  font-size: 0.85rem;
  @include transition-primary('transform, color');
  padding: 0;
  flex-shrink: 0;

  &::before {
    @include cover;
    border-radius: 50%;
    border: 1px solid $color-global;
    @include transition-primary('transform, background, border');
  }

  &:hover,
  &:focus,
  &:active,
  &:focus:active,
  a:hover & {
    &::before {
      transform: scale(1.2);
    }
  }

  @each $type, $color in $types {
    &.btn-#{$type} {
      &:hover,
      &:focus,
      &:active,
      &:focus:active,
      a:hover & {
        color: $color-inverted;

        &::before {
          background-color: $color;
          border: $color;
          transform: scale(1.15);
        }
      }
    }
  }
}
