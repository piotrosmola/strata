/* Buttons
----------------------------------------------------------*/

.btn {
  $b: &;
  @include reset('button');
  position: relative;
  @include text-uppercase;
  border-radius: 3rem;
  height: 2.8rem;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0 2rem 0.1rem;
  color: inherit;

  &-bg {
    @include cover(-8px);
    background-color: rgba(white, 0.02);
    backdrop-filter: blur(40px);
  }

  &-outline {
    @include cover;
    border: 1px solid currentColor;
    border-radius: 3rem;
  }

  &-label {
    position: relative;
    text-align: center;
  }

  &-icon {
    position: relative;

    &.i-arrow-top-right,
    &.i-arrow-top-right-fat {
      @include transition-primary('transform, opacity');

      &::before,
      &::after {
        @include transition-primary('transform, opacity');
        display: block;
      }

      &::after {
        position: absolute;
        right: 100%;
        top: 100%;
        @include icon('arrow-top-right');
        opacity: 0;
        transform: scale(0.3);
      }
    }

    &.i-arrow-top-right-fat::after {
      @include icon('arrow-top-right-fat');
    }

    &.i-play {
      @include transition-primary('transform, opacity');

      &::before,
      &::after {
        @include transition-primary('transform, opacity');
        display: block;
      }

      &::after {
        position: absolute;
        right: 100%;
        top: 0;
        @include icon('play');
        opacity: 0;
        transform: scale(0.3);
      }
    }

    &.i-arrow-down {
      @include transition-primary('transform, opacity');

      &::before,
      &::after {
        @include transition-primary('transform, opacity');
        display: block;
      }

      &::after {
        position: absolute;
        bottom: 100%;
        left: 0;
        @include icon('arrow-down');
        opacity: 0;
        transform: scale(0.3);
      }
    }
  }

  &:hover,
  &:focus,
  &:active,
  &:focus:active,
  .hover-button:hover & {
    box-shadow: none;
    outline: none;
    color: inherit;

    &::before {
      transform: scale(0.96, 0.93);
    }

    #{$b}-emot {
      animation: wave infinite 0.8s linear;
      transform-origin: 80% 100%;
    }

    #{$b}-icon {
      &.i-arrow-top-right,
      &.i-arrow-top-right-fat {
        transform: translate3d(100%, -100%, 0);

        &::after {
          opacity: 1;
          transform: scale(1);
        }

        &::before {
          opacity: 0;
          transform: scale(0.3);
        }
      }

      &.i-play {
        transform: translate3d(100%, 0, 0);

        &::after {
          opacity: 1;
          transform: scale(1);
        }

        &::before {
          opacity: 0;
          transform: scale(0.3);
        }
      }

      &.i-arrow-down {
        transform: translate3d(0, 100%, 0);

        &::after {
          opacity: 1;
          transform: scale(1);
        }

        &::before {
          opacity: 0;
          transform: scale(0.3);
        }
      }
    }
  }
}

/* Sizes */

.btn-lg {
}

.btn-sm {
  height: 2rem;
  font-size: 0.55rem;
  padding: 0 1.25rem 0.1rem;
}

/* Types */

.btn-primary {
  .btn-icon {
    &:last-child {
      margin-left: 0.5rem;
    }
  }
}

.btn-oval {
  height: 11rem;
  width: 11rem;
  flex-direction: column;

  @include media('>xl') {
    height: 13rem;
    width: 13rem;
  }

  @include media('<=lg') {
    height: 8rem;
    width: 8rem;
  }
  @include media('<=sm') {
    height: 7rem;
    width: 7rem;
    font-size: 0.45rem;
  }

  .btn-bg,
  .btn-outline {
    border-radius: 50%;
  }

  .btn-label {
    max-width: 6rem;
  }

  .btn-icon {
    margin-bottom: 1rem;
    font-size: 1rem;

    &:last-child {
      margin-top: 1rem;
      margin-bottom: 0;
    }
  }

  .btn-bg {
    @include cover(-10px);

    @include media('<=sm') {
      @include cover(-5px);
    }
  }

  &:hover,
  &:focus,
  &:active,
  &:focus:active {
    &:not(:disabled),
    &:not(.disabled) {
    }
  }
}

/* Play Button */
.btn-play {
  @include reset(button);
  border-radius: 50%;
  display: inline-block;
  height: 80px;
  position: relative;
  vertical-align: middle;
  width: 80px;

  &::before {
    @include transition-tertiary;
    background-color: rgba(black, 0.8);
    border-radius: 50%;
    bottom: 0;
    box-shadow: 0 0 10px 0 rgba(black, 0.3);
    content: ' ';
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
  }

  &::after {
    @include transition-primary;
    border-color: transparent transparent transparent white;
    border-style: solid;
    border-width: 9px 0 9px 14px;
    content: ' ';
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translate3d(-50%, -50%, 0);
  }

  &:hover,
  &:focus,
  &:active,
  &:focus:active {
    outline: none;

    &::before {
      background-color: white;
      opacity: 1;
      transform: scale(1.1);
      visibility: visible;
    }

    &::after {
      border-color: transparent transparent transparent $color-global;
    }
  }
}

n-loader {
  text-align: center;

  .state-default {
    @include transition-primary;
  }

  .state-error,
  .state-loading {
    @include transition-primary;
    left: 0;
    opacity: 0;
    position: absolute;
    right: 0;
    top: 50%;
    transform: translate3d(0, -50%, 0);
    visibility: hidden;
  }

  &.loading {
    pointer-events: none;

    .state-default {
      opacity: 0;
      visibility: hidden;
    }

    .state-loading {
      opacity: 1;
      visibility: visible;
    }
  }

  &.error {
    pointer-events: none;

    &,
    &:hover,
    &:focus,
    &:active,
    &:focus:active {
      &:not(:disabled),
      &:not(.disabled) {
        background-color: $color-red;
      }
    }

    .state-default {
      opacity: 0;
      visibility: hidden;
    }

    .state-error {
      opacity: 1;
      visibility: visible;
    }
  }
}
